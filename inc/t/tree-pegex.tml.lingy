{ "testml": "0.3.0",
  "code": [
    ["%<>",["*grammar","*input","*tree"],
      ["==",
        [".",
          ["parse-to-tree",
            ["*","grammar"],
            ["*","input"]],
          ["yaml"],
          ["clean"]],
        ["*","tree"],
        "+ - Pegex::Tree"]],
    ["%<>",["*grammar","*input","*wrap"],
      ["==",
        [".",
          ["parse-to-tree-wrap",
            ["*","grammar"],
            ["*","input"]],
          ["yaml"],
          ["clean"]],
        ["*","wrap"],
        "+ - Pegex::Tree::Wrap"]],
    ["%<>",["*grammar","*input","*ast"],
      ["==",
        [".",
          ["parse-to-tree-test",
            ["*","grammar"],
            ["*","input"]],
          ["yaml"],
          ["clean"]],
        ["*","ast"],
        "+ - TestAST"]]],
  "data": [
    { "label": "Part of Pegex Grammar",
      "point": {
        "grammar": "# This is the Pegex grammar for Pegex grammars!\ngrammar: ( <comment>* <rule_definition> )+ <comment>*\nrule_definition: /<WS>*/ <rule_name> /<COLON><WS>*/ <rule_line>\nrule_name: /(<ALPHA><WORD>*)/\ncomment: /<HASH><line><EOL>/\nline: /<ANY>*/\nrule_line: /(<line>)<EOL>/\n",
        "input": "# This is the Pegex grammar for Pegex grammars!\ngrammar: ( <comment>* <rule_definition> )+ <comment>*\nrule_definition: /<WS>*/ <rule_name> /<COLON><WS>*/ <rule_line>\n",
        "tree": "- - - []\n    - - grammar\n      - ( <comment>* <rule_definition> )+ <comment>*\n  - - []\n    - - rule_definition\n      - /<WS>*/ <rule_name> /<COLON><WS>*/ <rule_line>\n- []\n",
        "wrap": "grammar:\n- - - []\n    - rule_definition:\n      - rule_name: grammar\n      - rule_line: ( <comment>* <rule_definition> )+ <comment>*\n  - - []\n    - rule_definition:\n      - rule_name: rule_definition\n      - rule_line: /<WS>*/ <rule_name> /<COLON><WS>*/ <rule_line>\n- []\n"}}]}
